/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package encryptionandstegnography;

import static encryptionandstegnography.Decryption1.hidingImg;
import static encryptionandstegnography.Decryption1.textHidingImg;
import static encryptionandstegnography.Decryption1.m;
import static encryptionandstegnography.TextEncryption.encryptedText;
import static encryptionandstegnography.TextEncryption.key;
import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author gowthamd
 */
public class ExtractFromPic extends javax.swing.JFrame {

    /**
     * Creates new form TextDecryption2
     */
    String encryptedString="";
    int key=0;
    public ExtractFromPic() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        jButton1.setText("Extract Text");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Extracted encrypted text:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel2.setText("Enter 6 digits secret key to decrypt:");

        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });

        jButton2.setText("Decrypt");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Original Text:");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel4.setText("<<Home Screen");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(28, 28, 28)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(69, 69, 69)
                                .addComponent(jButton2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jLabel3)
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(106, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(126, 126, 126))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jButton1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(48, 48, 48))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        this.dispose();
        new TextHomeScreen().call();
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int modPixAry[][] = new int[1000][2];
            int count = 0;
                for (int i = 0; i < m; i++)
                {
                    for (int j = 0; j < m; j++)
                    {
                        Color color = new Color(textHidingImg.getRGB(i, j));
                        int red1=color.getRed();
                        int green1=color.getGreen();
                        int blue1=color.getBlue();
                        
                        Color color2 = new Color(hidingImg.getRGB(i, j));
                        int red2=color2.getRed();
                        int green2=color2.getGreen();
                        int blue2=color2.getBlue();
                        System.out.println("red1:"+red1+"  red2:"+red2+"green1:"+green1+"  green2:"+green2+"blue1:"+blue1+"  blue2:"+blue2);
                        if((red1!=red2) || (green1!=green2) || (blue1!=blue2))
                        {
                          System.out.println("red1:"+red1+"  red2:"+red2+"green1:"+green1+"  green2:"+green2+"blue1:"+blue1+"  blue2:"+blue2);
                          modPixAry[count][0]=i;
                          modPixAry[count][1]=j;
                          count++;
                        }
                        
                        
                    }
                }
                String modPicStr = "";
                encryptedString = "";
                for(int i=0;i<=count-1;i++)
                {
                    modPicStr += modPixAry[i][0]+","+modPixAry[i][1]+"  ";
                    if(i%3 == 0)
                        modPicStr += "\n";
                    
                    Color color = new Color(hidingImg.getRGB(modPixAry[i][0], modPixAry[i][1]));
                    int red1 = color.getRed();
                    int green1 = color.getGreen();
                    int blue1 = color.getBlue();
                    
                    Color color2 = new Color(textHidingImg.getRGB(modPixAry[i][0], modPixAry[i][1]));
                    int red2 = color2.getRed();
                    int green2 = color2.getGreen();
                    int blue2 = color2.getBlue();
                    
                    int difference=0;
                    
                    if((red1>150) || (green1>150) || (blue1>150))
                    {
                        if(red2<red1)
                        {
                            difference = (256 - red1)+red2;
                        }
                        else
                        {
                            difference = red2 - red1;
                        }
                    }
                    else
                    {
                        if(red2>red1)
                        {
                            difference = (255 - red2)+red1;
                        }
                        else
                        {
                            difference = red1 - red2;
                        }
                    }
                    
                    encryptedString += (char)difference;
                    System.out.println("diff:"+difference+"  ->"+(char)difference);
                }
                
                
                
                
                JOptionPane.showMessageDialog(null,"data stored pixels positions:\n"+modPicStr);
                jTextArea1.setText(encryptedString);
                
                
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        // TODO add your handling code here:
        try
        {
            System.out.println("key given:"+jTextField1.getText().trim());
            int x = Integer.parseInt(jTextField1.getText().trim());
        if(jTextField1.getText().length()!=6)
            JOptionPane.showMessageDialog(null, "Please enter 6 digit number");
        else
            key = x;
        }
        catch(Exception e)
        {
             JOptionPane.showMessageDialog(null, "Please give digits only");
           // JOptionPane.showMessageDialog(null, "Exception:"+e.getMessage());
        }
        
        
    }//GEN-LAST:event_jTextField1FocusLost

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int diffVal1=0, diffVal2=0, diffVal3=0, temp=0;
        diffVal3 = (key%100)%6+1;     
        temp = (key/100);
        diffVal2 = (temp%100)%6+1;
        temp = (temp/100);
        diffVal1 = (temp%100)%6+1;
        System.out.println("diffVal1:"+diffVal1+"  diffVal2:"+diffVal2+"  diffVal3:"+diffVal3);
        
        String originalText = jTextArea1.getText();
        String decryptedText = "";
        
        for(int i=0;i<=(encryptedString.length()/3)-1;i++)
        {
            System.out.println("1ch:"+i+"->"+encryptedString.charAt(i)+"  code:"+(int)encryptedString.charAt(i)+" summed code:"+((int)encryptedString.charAt(i)-diffVal1));
            
            decryptedText += Character.toString((char) ((char)((int)originalText.charAt(i)-diffVal1)%256));
        }
        
        System.out.println(" in loop 2, i initial:"+(encryptedString.length()/3)+"  conditioned i val:"+((encryptedString.length()*2/3)-1));
        
        for(int i=(encryptedString.length()/3);i<=(encryptedString.length()*2/3)-1;i++)
        {
            System.out.println("2ch:"+i+"->"+encryptedString.charAt(i));
            
            //int val = (int)encryptedString.charAt(i)+diffVal2;
            
            decryptedText += Character.toString((char)((int)encryptedString.charAt(i)+diffVal2));
        }
                
        for(int i=(encryptedString.length()*2/3);i<=(encryptedString.length())-1;i++)
        {
            System.out.println("3ch:"+i+"->"+encryptedString.charAt(i));
            
            decryptedText += Character.toString((char) ((char)((int)encryptedString.charAt(i)-diffVal3)%256)); 
        }
        
        System.out.println("Decrypted Text:"+decryptedText);
        
        jTextArea2.setText(decryptedText);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public void call() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExtractFromPic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExtractFromPic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExtractFromPic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExtractFromPic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExtractFromPic().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
